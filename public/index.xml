<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gitgitWi&#39;s blogdown pages</title>
    <link>/blogdown/</link>
    <description>Recent content on gitgitWi&#39;s blogdown pages</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Thu, 05 May 2016 21:48:51 -0700</lastBuildDate>
    
	<atom:link href="/blogdown/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>flexdashboard test2 Graph Widget</title>
      <link>/blogdown/2020/04/flexdashboard-test2-graph-widget/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blogdown/2020/04/flexdashboard-test2-graph-widget/</guid>
      <description>Lung Deaths (All) dygraph(ldeaths)  {&#34;x&#34;:{&#34;attrs&#34;:{&#34;labels&#34;:[&#34;month&#34;,&#34;V1&#34;],&#34;legend&#34;:&#34;auto&#34;,&#34;retainDateWindow&#34;:false,&#34;axes&#34;:{&#34;x&#34;:{&#34;pixelsPerLabel&#34;:60}}},&#34;scale&#34;:&#34;monthly&#34;,&#34;annotations&#34;:[],&#34;shadings&#34;:[],&#34;events&#34;:[],&#34;format&#34;:&#34;date&#34;,&#34;data&#34;:[[&#34;1974-01-01T00:00:00.000Z&#34;,&#34;1974-02-01T00:00:00.000Z&#34;,&#34;1974-03-01T00:00:00.000Z&#34;,&#34;1974-04-01T00:00:00.000Z&#34;,&#34;1974-05-01T00:00:00.000Z&#34;,&#34;1974-06-01T00:00:00.000Z&#34;,&#34;1974-07-01T00:00:00.000Z&#34;,&#34;1974-08-01T00:00:00.000Z&#34;,&#34;1974-09-01T00:00:00.000Z&#34;,&#34;1974-10-01T00:00:00.000Z&#34;,&#34;1974-11-01T00:00:00.000Z&#34;,&#34;1974-12-01T00:00:00.000Z&#34;,&#34;1975-01-01T00:00:00.000Z&#34;,&#34;1975-02-01T00:00:00.000Z&#34;,&#34;1975-03-01T00:00:00.000Z&#34;,&#34;1975-04-01T00:00:00.000Z&#34;,&#34;1975-05-01T00:00:00.000Z&#34;,&#34;1975-06-01T00:00:00.000Z&#34;,&#34;1975-07-01T00:00:00.000Z&#34;,&#34;1975-08-01T00:00:00.000Z&#34;,&#34;1975-09-01T00:00:00.000Z&#34;,&#34;1975-10-01T00:00:00.000Z&#34;,&#34;1975-11-01T00:00:00.000Z&#34;,&#34;1975-12-01T00:00:00.000Z&#34;,&#34;1976-01-01T00:00:00.000Z&#34;,&#34;1976-02-01T00:00:00.000Z&#34;,&#34;1976-03-01T00:00:00.000Z&#34;,&#34;1976-04-01T00:00:00.000Z&#34;,&#34;1976-05-01T00:00:00.000Z&#34;,&#34;1976-06-01T00:00:00.000Z&#34;,&#34;1976-07-01T00:00:00.000Z&#34;,&#34;1976-08-01T00:00:00.000Z&#34;,&#34;1976-09-01T00:00:00.000Z&#34;,&#34;1976-10-01T00:00:00.000Z&#34;,&#34;1976-11-01T00:00:00.000Z&#34;,&#34;1976-12-01T00:00:00.000Z&#34;,&#34;1977-01-01T00:00:00.000Z&#34;,&#34;1977-02-01T00:00:00.000Z&#34;,&#34;1977-03-01T00:00:00.000Z&#34;,&#34;1977-04-01T00:00:00.000Z&#34;,&#34;1977-05-01T00:00:00.000Z&#34;,&#34;1977-06-01T00:00:00.000Z&#34;,&#34;1977-07-01T00:00:00.000Z&#34;,&#34;1977-08-01T00:00:00.000Z&#34;,&#34;1977-09-01T00:00:00.000Z&#34;,&#34;1977-10-01T00:00:00.000Z&#34;,&#34;1977-11-01T00:00:00.000Z&#34;,&#34;1977-12-01T00:00:00.000Z&#34;,&#34;1978-01-01T00:00:00.000Z&#34;,&#34;1978-02-01T00:00:00.000Z&#34;,&#34;1978-03-01T00:00:00.000Z&#34;,&#34;1978-04-01T00:00:00.000Z&#34;,&#34;1978-05-01T00:00:00.000Z&#34;,&#34;1978-06-01T00:00:00.000Z&#34;,&#34;1978-07-01T00:00:00.000Z&#34;,&#34;1978-08-01T00:00:00.000Z&#34;,&#34;1978-09-01T00:00:00.000Z&#34;,&#34;1978-10-01T00:00:00.000Z&#34;,&#34;1978-11-01T00:00:00.000Z&#34;,&#34;1978-12-01T00:00:00.000Z&#34;,&#34;1979-01-01T00:00:00.000Z&#34;,&#34;1979-02-01T00:00:00.000Z&#34;,&#34;1979-03-01T00:00:00.000Z&#34;,&#34;1979-04-01T00:00:00.000Z&#34;,&#34;1979-05-01T00:00:00.000Z&#34;,&#34;1979-06-01T00:00:00.000Z&#34;,&#34;1979-07-01T00:00:00.000Z&#34;,&#34;1979-08-01T00:00:00.000Z&#34;,&#34;1979-09-01T00:00:00.000Z&#34;,&#34;1979-10-01T00:00:00.000Z&#34;,&#34;1979-11-01T00:00:00.000Z&#34;,&#34;1979-12-01T00:00:00.000Z&#34;],[3035,2552,2704,2554,2014,1655,1721,1524,1596,2074,2199,2512,2933,2889,2938,2497,1870,1726,1607,1545,1396,1787,2076,2837,2787,3891,3179,2011,1636,1580,1489,1300,1356,1653,2013,2823,3102,2294,2385,2444,1748,1554,1498,1361,1346,1564,1640,2293,2815,3137,2679,1969,1870,1633,1529,1366,1357,1570,1535,2491,3084,2605,2573,2143,1693,1504,1461,1354,1333,1492,1781,1915]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}  Lung Deaths (Male) dygraph(mdeaths)  {&#34;x&#34;:{&#34;attrs&#34;:{&#34;labels&#34;:[&#34;month&#34;,&#34;V1&#34;],&#34;legend&#34;:&#34;auto&#34;,&#34;retainDateWindow&#34;:false,&#34;axes&#34;:{&#34;x&#34;:{&#34;pixelsPerLabel&#34;:60}}},&#34;scale&#34;:&#34;monthly&#34;,&#34;annotations&#34;:[],&#34;shadings&#34;:[],&#34;events&#34;:[],&#34;format&#34;:&#34;date&#34;,&#34;data&#34;:[[&#34;1974-01-01T00:00:00.000Z&#34;,&#34;1974-02-01T00:00:00.000Z&#34;,&#34;1974-03-01T00:00:00.000Z&#34;,&#34;1974-04-01T00:00:00.000Z&#34;,&#34;1974-05-01T00:00:00.000Z&#34;,&#34;1974-06-01T00:00:00.000Z&#34;,&#34;1974-07-01T00:00:00.000Z&#34;,&#34;1974-08-01T00:00:00.000Z&#34;,&#34;1974-09-01T00:00:00.000Z&#34;,&#34;1974-10-01T00:00:00.000Z&#34;,&#34;1974-11-01T00:00:00.000Z&#34;,&#34;1974-12-01T00:00:00.000Z&#34;,&#34;1975-01-01T00:00:00.000Z&#34;,&#34;1975-02-01T00:00:00.000Z&#34;,&#34;1975-03-01T00:00:00.000Z&#34;,&#34;1975-04-01T00:00:00.000Z&#34;,&#34;1975-05-01T00:00:00.000Z&#34;,&#34;1975-06-01T00:00:00.000Z&#34;,&#34;1975-07-01T00:00:00.000Z&#34;,&#34;1975-08-01T00:00:00.000Z&#34;,&#34;1975-09-01T00:00:00.000Z&#34;,&#34;1975-10-01T00:00:00.000Z&#34;,&#34;1975-11-01T00:00:00.000Z&#34;,&#34;1975-12-01T00:00:00.000Z&#34;,&#34;1976-01-01T00:00:00.000Z&#34;,&#34;1976-02-01T00:00:00.000Z&#34;,&#34;1976-03-01T00:00:00.000Z&#34;,&#34;1976-04-01T00:00:00.000Z&#34;,&#34;1976-05-01T00:00:00.000Z&#34;,&#34;1976-06-01T00:00:00.000Z&#34;,&#34;1976-07-01T00:00:00.000Z&#34;,&#34;1976-08-01T00:00:00.000Z&#34;,&#34;1976-09-01T00:00:00.000Z&#34;,&#34;1976-10-01T00:00:00.000Z&#34;,&#34;1976-11-01T00:00:00.000Z&#34;,&#34;1976-12-01T00:00:00.000Z&#34;,&#34;1977-01-01T00:00:00.000Z&#34;,&#34;1977-02-01T00:00:00.000Z&#34;,&#34;1977-03-01T00:00:00.000Z&#34;,&#34;1977-04-01T00:00:00.000Z&#34;,&#34;1977-05-01T00:00:00.000Z&#34;,&#34;1977-06-01T00:00:00.000Z&#34;,&#34;1977-07-01T00:00:00.000Z&#34;,&#34;1977-08-01T00:00:00.000Z&#34;,&#34;1977-09-01T00:00:00.000Z&#34;,&#34;1977-10-01T00:00:00.000Z&#34;,&#34;1977-11-01T00:00:00.000Z&#34;,&#34;1977-12-01T00:00:00.000Z&#34;,&#34;1978-01-01T00:00:00.000Z&#34;,&#34;1978-02-01T00:00:00.000Z&#34;,&#34;1978-03-01T00:00:00.000Z&#34;,&#34;1978-04-01T00:00:00.000Z&#34;,&#34;1978-05-01T00:00:00.000Z&#34;,&#34;1978-06-01T00:00:00.000Z&#34;,&#34;1978-07-01T00:00:00.000Z&#34;,&#34;1978-08-01T00:00:00.000Z&#34;,&#34;1978-09-01T00:00:00.000Z&#34;,&#34;1978-10-01T00:00:00.000Z&#34;,&#34;1978-11-01T00:00:00.000Z&#34;,&#34;1978-12-01T00:00:00.000Z&#34;,&#34;1979-01-01T00:00:00.000Z&#34;,&#34;1979-02-01T00:00:00.000Z&#34;,&#34;1979-03-01T00:00:00.000Z&#34;,&#34;1979-04-01T00:00:00.000Z&#34;,&#34;1979-05-01T00:00:00.000Z&#34;,&#34;1979-06-01T00:00:00.000Z&#34;,&#34;1979-07-01T00:00:00.000Z&#34;,&#34;1979-08-01T00:00:00.000Z&#34;,&#34;1979-09-01T00:00:00.000Z&#34;,&#34;1979-10-01T00:00:00.000Z&#34;,&#34;1979-11-01T00:00:00.000Z&#34;,&#34;1979-12-01T00:00:00.000Z&#34;],[2134,1863,1877,1877,1492,1249,1280,1131,1209,1492,1621,1846,2103,2137,2153,1833,1403,1288,1186,1133,1053,1347,1545,2066,2020,2750,2283,1479,1189,1160,1113,970,999,1208,1467,2059,2240,1634,1722,1801,1246,1162,1087,1013,959,1179,1229,1655,2019,2284,1942,1423,1340,1187,1098,1004,970,1140,1110,1812,2263,1820,1846,1531,1215,1075,1056,975,940,1081,1294,1341]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}  Lung Deaths (Female) dygraph(fdeaths)  {&#34;</description>
    </item>
    
    <item>
      <title>conn to OracleDB, import XML/JSON files</title>
      <link>/blogdown/2020/04/conn-to-oracledb-import-xml/json-files/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blogdown/2020/04/conn-to-oracledb-import-xml/json-files/</guid>
      <description>DB 연결 Necessary Libraries library(RJDBC) ## 필요한 패키지를 로딩중입니다: DBI ## 필요한 패키지를 로딩중입니다: rJava library(rJava) library(igraph) ## ## 다음의 패키지를 부착합니다: &amp;#39;igraph&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## decompose, spectrum ## The following object is masked from &amp;#39;package:base&amp;#39;: ## ## union jdbcDriver &amp;lt;- JDBC(driverClass = &amp;quot;oracle.jdbc.OracleDriver&amp;quot;, classPath = &amp;quot;/Users/WnJ/Desktop/johnwi_KNOU/Programming/DB/oracle/ojdbc6.jar&amp;quot;) conn &amp;lt;- dbConnect(jdbcDriver, &amp;quot;jdbc:oracle:thin:@//localhost:1521/xe&amp;quot;, &amp;quot;dokdok&amp;quot;, &amp;quot;1234&amp;quot;) result &amp;lt;- dbGetQuery(conn, &amp;quot;select * from TEST&amp;quot;) head(result) ## NAME PHONE ## 1 test1 010-1234-1234 ## 2 test2 &amp;lt;NA&amp;gt; ## 3 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; ## 4 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; ## 5 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; ## 6 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;   sqldf : Oracle Query 실행을 위한 package library(sqldf) ## 필요한 패키지를 로딩중입니다: gsubfn ## 필요한 패키지를 로딩중입니다: proto ## 필요한 패키지를 로딩중입니다: RSQLite head(iris) ## Sepal.</description>
    </item>
    
    <item>
      <title>Create Blog Pages by R-Blogdown</title>
      <link>/blogdown/2020/04/create-blog-pages-by-r-blogdown/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blogdown/2020/04/create-blog-pages-by-r-blogdown/</guid>
      <description>Necessary Packages  blogdown hugo  install.packages(&amp;quot;blogdown&amp;quot;)library(blogdown)blogdown::install_hugo()</description>
    </item>
    
    <item>
      <title>LN0407 R Markdown</title>
      <link>/blogdown/2020/04/ln0407-r-markdown/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blogdown/2020/04/ln0407-r-markdown/</guid>
      <description>Math LaTeX 사용방법 표준 LaTeX 수학 문법 이용해 작성
참고 사이트 : https://www.codecogs.com/latex/eqneditor.php
 디스플레이 수식 :  \[ y_{i} = \sqrt[3]{x_{i}} + \sum_{1}^{n} \]
 인라인 수식 : 문장안에서 \(y_{i} = \sqrt[3]{x_{i}} + \sum_{1}^{n}\)와 같이 수식 입력    표 생성  기존 Markdown 방식  구분 | 내용 -|- 이름 | 이름이다 나이 | 1251 졸업연도 | 1923 입사연도 | 1332 설명 | 시간을 거스르는 자   구분 내용    이름 이름이다  나이 1251  졸업연도 1923  입사연도 1332  설명 시간을 거스르는 자     R Markdown  ex.</description>
    </item>
    
    <item>
      <title>프로야구 선수별 기록 분석</title>
      <link>/blogdown/2020/04/%ED%94%84%EB%A1%9C%EC%95%BC%EA%B5%AC-%EC%84%A0%EC%88%98%EB%B3%84-%EA%B8%B0%EB%A1%9D-%EB%B6%84%EC%84%9D/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blogdown/2020/04/%ED%94%84%EB%A1%9C%EC%95%BC%EA%B5%AC-%EC%84%A0%EC%88%98%EB%B3%84-%EA%B8%B0%EB%A1%9D-%EB%B6%84%EC%84%9D/</guid>
      <description>한국 프로야구 선수별 기록 분석 - 2013년 import data library(dplyr) ## ## 다음의 패키지를 부착합니다: &amp;#39;dplyr&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## filter, lag ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## intersect, setdiff, setequal, union library(readr) data &amp;lt;- read_csv(&amp;quot;~/Desktop/johnwi_KNOU/Programming/1. R/handouts/0406/data/주요선수별성적-2013년.csv&amp;quot;, locale = locale(encoding = &amp;quot;cp949&amp;quot;)) ## Parsed with column specification: ## cols( ## .default = col_double(), ## 선수명 = col_character(), ## 포지션 = col_character(), ## 팀 = col_character() ## ) ## See spec(.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/blogdown/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>/blogdown/about/</guid>
      <description>This is a &amp;ldquo;hello world&amp;rdquo; example website for the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.</description>
    </item>
    
    <item>
      <title></title>
      <link>/blogdown/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blogdown/1/01/</guid>
      <description>R Markdown(2) flexdashboard 2020-04-08
true
flexdashboard package introduction  dashboard 작성 및 customization은 RMarkdown에 기반해 이뤄짐 shiny component들도 덧붙일수 있음  install and import the package install.packages(&amp;quot;flexdashboard&amp;quot;) \ library(flexdashboard)
create new flexdashboard new R Markdown -&amp;gt; from templates -&amp;gt; flex dashboard
YAML front matter --- title: &amp;quot;flexdashboard test&amp;quot; output: flexdashboard::flex_dashboard: orientation: columns vertical_layout: fill ---   orientation: columns : total layout == columns  options : columns, rows   vertical_layout : fill : CSS의 media query 방식  options : fill, scroll    Column Column {data-width=650 .</description>
    </item>
    
    <item>
      <title>Lecture 0403-1 Text Mining with R</title>
      <link>/blogdown/1/01/lecture-0403-1-text-mining-with-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blogdown/1/01/lecture-0403-1-text-mining-with-r/</guid>
      <description>true  텍스트 마이닝 Text Mining Text-mining 개요 ###분석절차 - 형태소분석 Morphology Analsys - 명사, 동사, 형용사 등 의미 지닌 품사 단어 추출 - 빈도표 - 시각화
 ex1. 힙합 가사 분석 import libraries and data files library(KoNLP) ## Checking user defined dictionary! library(memoise) library(dplyr) ## ## 다음의 패키지를 부착합니다: &amp;#39;dplyr&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## filter, lag ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## intersect, setdiff, setequal, union library(stringr) Sejong 보다 많은 단어 데이터 보유한 NIADic 사용 ; 983012 개 단어, KoNLP 함수</description>
    </item>
    
    <item>
      <title>Lecture 0403-2 Visualization Maps &amp; Graphs with R</title>
      <link>/blogdown/1/01/lecture-0403-2-visualization-maps-graphs-with-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blogdown/1/01/lecture-0403-2-visualization-maps-graphs-with-r/</guid>
      <description>true  Visualization Maps Choropleth Map  지역별 통계치를 색깔 차이로 표현 인구나 소득 같은 특성   미국 주별 강력 범죄율 단계 구분도 import libraries library(devtools) ## 필요한 패키지를 로딩중입니다: usethis # library(htmlwidgets) # library(htmltools) library(jsonlite) library(yaml) library(base64enc) library(tm) ## 필요한 패키지를 로딩중입니다: NLP # library(wordcloud2) # library(ggplot2) library(tibble) # maps library(ggmap) ## 필요한 패키지를 로딩중입니다: ggplot2 ## ## 다음의 패키지를 부착합니다: &amp;#39;ggplot2&amp;#39; ## The following object is masked from &amp;#39;package:NLP&amp;#39;: ## ## annotate ## Google&amp;#39;s Terms of Service: https://cloud.</description>
    </item>
    
    <item>
      <title>프로야구 선수별 기록 분석</title>
      <link>/blogdown/2020-04-07-ln0406.md/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blogdown/2020-04-07-ln0406.md/</guid>
      <description>한국 프로야구 선수별 기록 분석 - 2013년 import data library(dplyr) ## ## 다음의 패키지를 부착합니다: &amp;#39;dplyr&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## filter, lag ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## intersect, setdiff, setequal, union library(readr) data &amp;lt;- read_csv(&amp;quot;~/Desktop/johnwi_KNOU/Programming/1. R/handouts/0406/data/주요선수별성적-2013년.csv&amp;quot;, locale = locale(encoding = &amp;quot;cp949&amp;quot;)) ## Parsed with column specification: ## cols( ## .default = col_double(), ## 선수명 = col_character(), ## 포지션 = col_character(), ## 팀 = col_character() ## ) ## See spec(.</description>
    </item>
    
  </channel>
</rss>